#!/bin/bash

# üöÄ –°–ö–†–ò–ü–¢ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø –°–£–ü–ï–†-–ë–´–°–¢–†–û–ì–û GEMINI PROXY
# ================================================

set -e  # –í—ã—Ö–æ–¥–∏–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PROJECT_ID=${PROJECT_ID:-"your-project-id"}
SERVICE_NAME=${SERVICE_NAME:-"gemini-audio-proxy"}
REGION=${REGION:-"us-central1"}
IMAGE_NAME="gcr.io/$PROJECT_ID/$SERVICE_NAME"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï GEMINI AUDIO PROXY${NC}"
echo "================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
check_tool() {
    if ! command -v $1 &> /dev/null; then
        echo -e "${RED}‚ùå $1 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
        exit 1
    fi
}

echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã...${NC}"
check_tool "gcloud"
check_tool "docker"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
echo -e "${YELLOW}üîê –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...${NC}"
if ! gcloud auth list --filter=status:ACTIVE --format="value(account)" | grep -q .; then
    echo -e "${RED}‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Google Cloud. –í—ã–ø–æ–ª–Ω–∏—Ç–µ 'gcloud auth login'${NC}"
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç
echo -e "${YELLOW}üìÅ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç: $PROJECT_ID${NC}"
gcloud config set project $PROJECT_ID

# –í–∫–ª—é—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ API
echo -e "${YELLOW}üîå –í–∫–ª—é—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ API...${NC}"
gcloud services enable cloudbuild.googleapis.com
gcloud services enable run.googleapis.com
gcloud services enable containerregistry.googleapis.com

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docker –¥–ª—è GCR
echo -e "${YELLOW}üê≥ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker –¥–ª—è Google Container Registry...${NC}"
gcloud auth configure-docker

# –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
echo -e "${YELLOW}üèóÔ∏è  –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑...${NC}"
docker build -t $IMAGE_NAME . --platform linux/amd64

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–∑ –≤ —Ä–µ–µ—Å—Ç—Ä
echo -e "${YELLOW}üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–∑ –≤ Container Registry...${NC}"
docker push $IMAGE_NAME

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º –≤ Cloud Run
echo -e "${YELLOW}‚òÅÔ∏è  –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º –≤ Cloud Run...${NC}"
gcloud run deploy $SERVICE_NAME \
    --image=$IMAGE_NAME \
    --platform=managed \
    --region=$REGION \
    --allow-unauthenticated \
    --memory=4Gi \
    --cpu=2 \
    --max-instances=50 \
    --concurrency=20 \
    --timeout=900 \
    --set-env-vars="ENABLE_CACHING=true,ENABLE_STREAMING=true,ENABLE_CONNECTION_POOLING=true,ENABLE_PREWARMING=true,CACHE_SIZE=200,MAX_CONNECTIONS=25,STREAMING_THRESHOLD=5" \
    --labels="app=gemini-proxy,version=v2,optimized=true"

# –ü–æ–ª—É—á–∞–µ–º URL —Å–µ—Ä–≤–∏—Å–∞
SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format="value(status.url)")

echo ""
echo -e "${GREEN}‚úÖ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!${NC}"
echo "================================================="
echo -e "üåê URL —Å–µ—Ä–≤–∏—Å–∞: ${BLUE}$SERVICE_URL${NC}"
echo -e "üìä Health check: ${BLUE}$SERVICE_URL/health${NC}"
echo -e "üìà –ú–µ—Ç—Ä–∏–∫–∏: ${BLUE}$SERVICE_URL/metrics${NC}"
echo ""
echo -e "${YELLOW}üß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:${NC}"
echo "export CLOUD_RUN_URL=\"$SERVICE_URL\""
echo "python performance_tester.py"
echo ""
echo -e "${YELLOW}üìù –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞:${NC}"
echo "gcloud run logs tail $SERVICE_NAME --region=$REGION"
echo ""
echo -e "${YELLOW}‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç API:${NC}"
echo "curl -X POST \"$SERVICE_URL/v1/audio/transcriptions\" \\"
echo "  -H \"Authorization: Bearer \$GEMINI_API_KEY\" \\"
echo "  -F \"file=@test_audio.wav\" \\"
echo "  -F \"response_format=json\""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–∞
echo ""
echo -e "${YELLOW}‚ù§Ô∏è  –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
if curl -s "$SERVICE_URL/health" > /dev/null; then
    echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π
    echo -e "${YELLOW}üîß –°—Ç–∞—Ç—É—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π:${NC}"
    curl -s "$SERVICE_URL/health" | python -m json.tool | grep -A 10 "optimizations"
else
    echo -e "${RED}‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.${NC}"
fi

echo ""
echo -e "${GREEN}üéâ –ì–æ—Ç–æ–≤–æ! –í–∞—à —Å—É–ø–µ—Ä-–±—ã—Å—Ç—Ä—ã–π Gemini Audio Proxy –∑–∞–ø—É—â–µ–Ω!${NC}"
